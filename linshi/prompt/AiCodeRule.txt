## 语法
使用es6及以上的语法
使用typescript的语法
使用解构赋值
使用扩展运算符
使用模板字符串
使用async/await，而不是回调函数

## 变量
变量名应具有描述性，反映其用途
优先使用 const 声明变量，而不是 let
统一使用小驼峰命名法

## 函数
使用箭头函数
使用 const 声明函数，而不是 function
函数名应具有描述性，反映其用途
每个函数只完成一个单一职责
使用默认参数值，减少条件判断
避免在循环中修改数组长度
保持变量作用域最小化
使用常量存储不变的值，避免魔法数字
使用高阶函数（如 map, filter）代替 for 循环

## 其它
语句的末尾不使用分号 ; 结束
常量使用首大写字母和下划线（Snake_Case）
为复杂的逻辑块添加注释，应简明扼要，解释“为什么”而非“做什么”。
注释尽量使用 // 单行注释，

## 代码组织
按功能模块组织代码目录结构
将组件、服务、工具函数、配置、常量、分开放置
将常量和配置放在单独的文件中
保持文件长度适中，避免过长文件
使用索引文件（index.ts）管理导出

## 习惯
尽量将某个方向的功能抽成 react hooks
使用 on 开头命名事件处理程序函数，如 onClick、onChange
使用 is 开头命名布尔值函数，如 isValid
使用 get 开头命名返回值的函数，如 getUserName
使用 fetch 开头命名异步请求函数，如 fetchData
使用 render 开头命名渲染函数，如 renderTitle
使用 add、remove、create、delete、update 开头命名增删改查函数，如 addData
使用 format 开头命名格式化函数，如 formatTime
使用 check 开头命名校验函数，如 checkName

## 框架及库
react
umijs
antd
lodash
ahooks

优先使用 ahooks 里的 hooks，例如：useBoolean
