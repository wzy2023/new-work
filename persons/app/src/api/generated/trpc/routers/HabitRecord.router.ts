/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { db } from ".";
import { createTRPCRouter } from "@/api/trpc/trpc";
import { procedure } from "@/api/trpc/procedures";
import * as _Schema from '@/api/generated/zod/input';
const $Schema: typeof _Schema = (_Schema as any).default ?? _Schema;
import { checkRead, checkMutate } from '../helper';

export default function createRouter() {
    return createTRPCRouter({

        create: procedure.input($Schema.HabitRecordInputSchema.create).mutation(async ({ ctx, input }) => checkMutate(db(ctx).habitRecord.create(input as any))),

        delete: procedure.input($Schema.HabitRecordInputSchema.delete).mutation(async ({ ctx, input }) => checkMutate(db(ctx).habitRecord.delete(input as any))),

        findMany: procedure.input($Schema.HabitRecordInputSchema.findMany.optional()).query(({ ctx, input }) => checkRead(db(ctx).habitRecord.findMany(input as any))),

        findUnique: procedure.input($Schema.HabitRecordInputSchema.findUnique).query(({ ctx, input }) => checkRead(db(ctx).habitRecord.findUnique(input as any))),

        update: procedure.input($Schema.HabitRecordInputSchema.update).mutation(async ({ ctx, input }) => checkMutate(db(ctx).habitRecord.update(input as any))),

    }
    );
}
