/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { TaskEdgeSelectObjectSchema } from '../objects/TaskEdgeSelect.schema';
;
import { TaskEdgeWhereUniqueInputObjectSchema } from '../objects/TaskEdgeWhereUniqueInput.schema';
import { TaskEdgeWhereInputObjectSchema } from '../objects/TaskEdgeWhereInput.schema';
import { TaskEdgeOrderByWithRelationInputObjectSchema } from '../objects/TaskEdgeOrderByWithRelationInput.schema';
import { TaskEdgeScalarFieldEnumSchema } from '../enums/TaskEdgeScalarFieldEnum.schema';
import { TaskEdgeCreateInputObjectSchema } from '../objects/TaskEdgeCreateInput.schema';
import { TaskEdgeUncheckedCreateInputObjectSchema } from '../objects/TaskEdgeUncheckedCreateInput.schema';
import { TaskEdgeCreateManyInputObjectSchema } from '../objects/TaskEdgeCreateManyInput.schema';
import { TaskEdgeUpdateInputObjectSchema } from '../objects/TaskEdgeUpdateInput.schema';
import { TaskEdgeUncheckedUpdateInputObjectSchema } from '../objects/TaskEdgeUncheckedUpdateInput.schema';
import { TaskEdgeUpdateManyMutationInputObjectSchema } from '../objects/TaskEdgeUpdateManyMutationInput.schema';
import { TaskEdgeUncheckedUpdateManyInputObjectSchema } from '../objects/TaskEdgeUncheckedUpdateManyInput.schema';
import { TaskEdgeCountAggregateInputObjectSchema } from '../objects/TaskEdgeCountAggregateInput.schema';
import { TaskEdgeMinAggregateInputObjectSchema } from '../objects/TaskEdgeMinAggregateInput.schema';
import { TaskEdgeMaxAggregateInputObjectSchema } from '../objects/TaskEdgeMaxAggregateInput.schema';
import { TaskEdgeOrderByWithAggregationInputObjectSchema } from '../objects/TaskEdgeOrderByWithAggregationInput.schema';
import { TaskEdgeScalarWhereWithAggregatesInputObjectSchema } from '../objects/TaskEdgeScalarWhereWithAggregatesInput.schema'

type TaskEdgeInputSchemaType = {
    findUnique: z.ZodType<Prisma.TaskEdgeFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.TaskEdgeFindFirstArgs>,
    findMany: z.ZodType<Prisma.TaskEdgeFindManyArgs>,
    create: z.ZodType<Prisma.TaskEdgeCreateArgs>,
    createMany: z.ZodType<Prisma.TaskEdgeCreateManyArgs>,
    delete: z.ZodType<Prisma.TaskEdgeDeleteArgs>,
    deleteMany: z.ZodType<Prisma.TaskEdgeDeleteManyArgs>,
    update: z.ZodType<Prisma.TaskEdgeUpdateArgs>,
    updateMany: z.ZodType<Prisma.TaskEdgeUpdateManyArgs>,
    upsert: z.ZodType<Prisma.TaskEdgeUpsertArgs>,
    aggregate: z.ZodType<Prisma.TaskEdgeAggregateArgs>,
    groupBy: z.ZodType<Prisma.TaskEdgeGroupByArgs>,
    count: z.ZodType<Prisma.TaskEdgeCountArgs>
}

export const TaskEdgeInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => TaskEdgeSelectObjectSchema.optional()), where: TaskEdgeWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => TaskEdgeSelectObjectSchema.optional()), where: TaskEdgeWhereInputObjectSchema.optional(), orderBy: z.union([TaskEdgeOrderByWithRelationInputObjectSchema, TaskEdgeOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: TaskEdgeWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(TaskEdgeScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => TaskEdgeSelectObjectSchema.optional()), where: TaskEdgeWhereInputObjectSchema.optional(), orderBy: z.union([TaskEdgeOrderByWithRelationInputObjectSchema, TaskEdgeOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: TaskEdgeWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(TaskEdgeScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => TaskEdgeSelectObjectSchema.optional()), data: z.union([TaskEdgeCreateInputObjectSchema, TaskEdgeUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([TaskEdgeCreateManyInputObjectSchema, z.array(TaskEdgeCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => TaskEdgeSelectObjectSchema.optional()), where: TaskEdgeWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: TaskEdgeWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => TaskEdgeSelectObjectSchema.optional()), data: z.union([TaskEdgeUpdateInputObjectSchema, TaskEdgeUncheckedUpdateInputObjectSchema]), where: TaskEdgeWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([TaskEdgeUpdateManyMutationInputObjectSchema, TaskEdgeUncheckedUpdateManyInputObjectSchema]), where: TaskEdgeWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => TaskEdgeSelectObjectSchema.optional()), where: TaskEdgeWhereUniqueInputObjectSchema, create: z.union([TaskEdgeCreateInputObjectSchema, TaskEdgeUncheckedCreateInputObjectSchema]), update: z.union([TaskEdgeUpdateInputObjectSchema, TaskEdgeUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: TaskEdgeWhereInputObjectSchema.optional(), orderBy: z.union([TaskEdgeOrderByWithRelationInputObjectSchema, TaskEdgeOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: TaskEdgeWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), TaskEdgeCountAggregateInputObjectSchema]).optional(), _min: TaskEdgeMinAggregateInputObjectSchema.optional(), _max: TaskEdgeMaxAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: TaskEdgeWhereInputObjectSchema.optional(), orderBy: z.union([TaskEdgeOrderByWithAggregationInputObjectSchema, TaskEdgeOrderByWithAggregationInputObjectSchema.array()]).optional(), having: TaskEdgeScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(TaskEdgeScalarFieldEnumSchema), _count: z.union([z.literal(true), TaskEdgeCountAggregateInputObjectSchema]).optional(), _min: TaskEdgeMinAggregateInputObjectSchema.optional(), _max: TaskEdgeMaxAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: TaskEdgeWhereInputObjectSchema.optional(), orderBy: z.union([TaskEdgeOrderByWithRelationInputObjectSchema, TaskEdgeOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: TaskEdgeWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(TaskEdgeScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), TaskEdgeCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as TaskEdgeInputSchemaType;
