/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { HabitGroupSelectObjectSchema } from '../objects/HabitGroupSelect.schema';
import { HabitGroupIncludeObjectSchema } from '../objects/HabitGroupInclude.schema';
import { HabitGroupWhereUniqueInputObjectSchema } from '../objects/HabitGroupWhereUniqueInput.schema';
import { HabitGroupWhereInputObjectSchema } from '../objects/HabitGroupWhereInput.schema';
import { HabitGroupOrderByWithRelationInputObjectSchema } from '../objects/HabitGroupOrderByWithRelationInput.schema';
import { HabitGroupScalarFieldEnumSchema } from '../enums/HabitGroupScalarFieldEnum.schema';
import { HabitGroupCreateInputObjectSchema } from '../objects/HabitGroupCreateInput.schema';
import { HabitGroupUncheckedCreateInputObjectSchema } from '../objects/HabitGroupUncheckedCreateInput.schema';
import { HabitGroupCreateManyInputObjectSchema } from '../objects/HabitGroupCreateManyInput.schema';
import { HabitGroupUpdateInputObjectSchema } from '../objects/HabitGroupUpdateInput.schema';
import { HabitGroupUncheckedUpdateInputObjectSchema } from '../objects/HabitGroupUncheckedUpdateInput.schema';
import { HabitGroupUpdateManyMutationInputObjectSchema } from '../objects/HabitGroupUpdateManyMutationInput.schema';
import { HabitGroupUncheckedUpdateManyInputObjectSchema } from '../objects/HabitGroupUncheckedUpdateManyInput.schema';
import { HabitGroupCountAggregateInputObjectSchema } from '../objects/HabitGroupCountAggregateInput.schema';
import { HabitGroupMinAggregateInputObjectSchema } from '../objects/HabitGroupMinAggregateInput.schema';
import { HabitGroupMaxAggregateInputObjectSchema } from '../objects/HabitGroupMaxAggregateInput.schema';
import { HabitGroupAvgAggregateInputObjectSchema } from '../objects/HabitGroupAvgAggregateInput.schema';
import { HabitGroupSumAggregateInputObjectSchema } from '../objects/HabitGroupSumAggregateInput.schema';
import { HabitGroupOrderByWithAggregationInputObjectSchema } from '../objects/HabitGroupOrderByWithAggregationInput.schema';
import { HabitGroupScalarWhereWithAggregatesInputObjectSchema } from '../objects/HabitGroupScalarWhereWithAggregatesInput.schema'

type HabitGroupInputSchemaType = {
    findUnique: z.ZodType<Prisma.HabitGroupFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.HabitGroupFindFirstArgs>,
    findMany: z.ZodType<Prisma.HabitGroupFindManyArgs>,
    create: z.ZodType<Prisma.HabitGroupCreateArgs>,
    createMany: z.ZodType<Prisma.HabitGroupCreateManyArgs>,
    delete: z.ZodType<Prisma.HabitGroupDeleteArgs>,
    deleteMany: z.ZodType<Prisma.HabitGroupDeleteManyArgs>,
    update: z.ZodType<Prisma.HabitGroupUpdateArgs>,
    updateMany: z.ZodType<Prisma.HabitGroupUpdateManyArgs>,
    upsert: z.ZodType<Prisma.HabitGroupUpsertArgs>,
    aggregate: z.ZodType<Prisma.HabitGroupAggregateArgs>,
    groupBy: z.ZodType<Prisma.HabitGroupGroupByArgs>,
    count: z.ZodType<Prisma.HabitGroupCountArgs>
}

export const HabitGroupInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => HabitGroupSelectObjectSchema.optional()), include: z.lazy(() => HabitGroupIncludeObjectSchema.optional()), where: HabitGroupWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => HabitGroupSelectObjectSchema.optional()), include: z.lazy(() => HabitGroupIncludeObjectSchema.optional()), where: HabitGroupWhereInputObjectSchema.optional(), orderBy: z.union([HabitGroupOrderByWithRelationInputObjectSchema, HabitGroupOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HabitGroupWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(HabitGroupScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => HabitGroupSelectObjectSchema.optional()), include: z.lazy(() => HabitGroupIncludeObjectSchema.optional()), where: HabitGroupWhereInputObjectSchema.optional(), orderBy: z.union([HabitGroupOrderByWithRelationInputObjectSchema, HabitGroupOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HabitGroupWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(HabitGroupScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => HabitGroupSelectObjectSchema.optional()), include: z.lazy(() => HabitGroupIncludeObjectSchema.optional()), data: z.union([HabitGroupCreateInputObjectSchema, HabitGroupUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([HabitGroupCreateManyInputObjectSchema, z.array(HabitGroupCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => HabitGroupSelectObjectSchema.optional()), include: z.lazy(() => HabitGroupIncludeObjectSchema.optional()), where: HabitGroupWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: HabitGroupWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => HabitGroupSelectObjectSchema.optional()), include: z.lazy(() => HabitGroupIncludeObjectSchema.optional()), data: z.union([HabitGroupUpdateInputObjectSchema, HabitGroupUncheckedUpdateInputObjectSchema]), where: HabitGroupWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([HabitGroupUpdateManyMutationInputObjectSchema, HabitGroupUncheckedUpdateManyInputObjectSchema]), where: HabitGroupWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => HabitGroupSelectObjectSchema.optional()), include: z.lazy(() => HabitGroupIncludeObjectSchema.optional()), where: HabitGroupWhereUniqueInputObjectSchema, create: z.union([HabitGroupCreateInputObjectSchema, HabitGroupUncheckedCreateInputObjectSchema]), update: z.union([HabitGroupUpdateInputObjectSchema, HabitGroupUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: HabitGroupWhereInputObjectSchema.optional(), orderBy: z.union([HabitGroupOrderByWithRelationInputObjectSchema, HabitGroupOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HabitGroupWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), HabitGroupCountAggregateInputObjectSchema]).optional(), _min: HabitGroupMinAggregateInputObjectSchema.optional(), _max: HabitGroupMaxAggregateInputObjectSchema.optional(), _avg: HabitGroupAvgAggregateInputObjectSchema.optional(), _sum: HabitGroupSumAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: HabitGroupWhereInputObjectSchema.optional(), orderBy: z.union([HabitGroupOrderByWithAggregationInputObjectSchema, HabitGroupOrderByWithAggregationInputObjectSchema.array()]).optional(), having: HabitGroupScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(HabitGroupScalarFieldEnumSchema), _count: z.union([z.literal(true), HabitGroupCountAggregateInputObjectSchema]).optional(), _min: HabitGroupMinAggregateInputObjectSchema.optional(), _max: HabitGroupMaxAggregateInputObjectSchema.optional(), _avg: HabitGroupAvgAggregateInputObjectSchema.optional(), _sum: HabitGroupSumAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: HabitGroupWhereInputObjectSchema.optional(), orderBy: z.union([HabitGroupOrderByWithRelationInputObjectSchema, HabitGroupOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HabitGroupWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(HabitGroupScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), HabitGroupCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as HabitGroupInputSchemaType;
