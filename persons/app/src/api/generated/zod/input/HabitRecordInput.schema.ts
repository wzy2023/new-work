/******************************************************************************
* This file was generated by ZenStack CLI.
******************************************************************************/

/* eslint-disable */
// @ts-nocheck

import { z } from 'zod';
;
import type { Prisma } from '@prisma/client';

;
import { HabitRecordSelectObjectSchema } from '../objects/HabitRecordSelect.schema';
import { HabitRecordIncludeObjectSchema } from '../objects/HabitRecordInclude.schema';
import { HabitRecordWhereUniqueInputObjectSchema } from '../objects/HabitRecordWhereUniqueInput.schema';
import { HabitRecordWhereInputObjectSchema } from '../objects/HabitRecordWhereInput.schema';
import { HabitRecordOrderByWithRelationInputObjectSchema } from '../objects/HabitRecordOrderByWithRelationInput.schema';
import { HabitRecordScalarFieldEnumSchema } from '../enums/HabitRecordScalarFieldEnum.schema';
import { HabitRecordCreateInputObjectSchema } from '../objects/HabitRecordCreateInput.schema';
import { HabitRecordUncheckedCreateInputObjectSchema } from '../objects/HabitRecordUncheckedCreateInput.schema';
import { HabitRecordCreateManyInputObjectSchema } from '../objects/HabitRecordCreateManyInput.schema';
import { HabitRecordUpdateInputObjectSchema } from '../objects/HabitRecordUpdateInput.schema';
import { HabitRecordUncheckedUpdateInputObjectSchema } from '../objects/HabitRecordUncheckedUpdateInput.schema';
import { HabitRecordUpdateManyMutationInputObjectSchema } from '../objects/HabitRecordUpdateManyMutationInput.schema';
import { HabitRecordUncheckedUpdateManyInputObjectSchema } from '../objects/HabitRecordUncheckedUpdateManyInput.schema';
import { HabitRecordCountAggregateInputObjectSchema } from '../objects/HabitRecordCountAggregateInput.schema';
import { HabitRecordMinAggregateInputObjectSchema } from '../objects/HabitRecordMinAggregateInput.schema';
import { HabitRecordMaxAggregateInputObjectSchema } from '../objects/HabitRecordMaxAggregateInput.schema';
import { HabitRecordAvgAggregateInputObjectSchema } from '../objects/HabitRecordAvgAggregateInput.schema';
import { HabitRecordSumAggregateInputObjectSchema } from '../objects/HabitRecordSumAggregateInput.schema';
import { HabitRecordOrderByWithAggregationInputObjectSchema } from '../objects/HabitRecordOrderByWithAggregationInput.schema';
import { HabitRecordScalarWhereWithAggregatesInputObjectSchema } from '../objects/HabitRecordScalarWhereWithAggregatesInput.schema'

type HabitRecordInputSchemaType = {
    findUnique: z.ZodType<Prisma.HabitRecordFindUniqueArgs>,
    findFirst: z.ZodType<Prisma.HabitRecordFindFirstArgs>,
    findMany: z.ZodType<Prisma.HabitRecordFindManyArgs>,
    create: z.ZodType<Prisma.HabitRecordCreateArgs>,
    createMany: z.ZodType<Prisma.HabitRecordCreateManyArgs>,
    delete: z.ZodType<Prisma.HabitRecordDeleteArgs>,
    deleteMany: z.ZodType<Prisma.HabitRecordDeleteManyArgs>,
    update: z.ZodType<Prisma.HabitRecordUpdateArgs>,
    updateMany: z.ZodType<Prisma.HabitRecordUpdateManyArgs>,
    upsert: z.ZodType<Prisma.HabitRecordUpsertArgs>,
    aggregate: z.ZodType<Prisma.HabitRecordAggregateArgs>,
    groupBy: z.ZodType<Prisma.HabitRecordGroupByArgs>,
    count: z.ZodType<Prisma.HabitRecordCountArgs>
}

export const HabitRecordInputSchema = {
    findUnique: z.object({
        select: z.lazy(() => HabitRecordSelectObjectSchema.optional()), include: z.lazy(() => HabitRecordIncludeObjectSchema.optional()), where: HabitRecordWhereUniqueInputObjectSchema
    }).strict(), findFirst: z.object({
        select: z.lazy(() => HabitRecordSelectObjectSchema.optional()), include: z.lazy(() => HabitRecordIncludeObjectSchema.optional()), where: HabitRecordWhereInputObjectSchema.optional(), orderBy: z.union([HabitRecordOrderByWithRelationInputObjectSchema, HabitRecordOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HabitRecordWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(HabitRecordScalarFieldEnumSchema).optional()
    }).strict(), findMany: z.object({
        select: z.lazy(() => HabitRecordSelectObjectSchema.optional()), include: z.lazy(() => HabitRecordIncludeObjectSchema.optional()), where: HabitRecordWhereInputObjectSchema.optional(), orderBy: z.union([HabitRecordOrderByWithRelationInputObjectSchema, HabitRecordOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HabitRecordWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(HabitRecordScalarFieldEnumSchema).optional()
    }).strict(), create: z.object({
        select: z.lazy(() => HabitRecordSelectObjectSchema.optional()), include: z.lazy(() => HabitRecordIncludeObjectSchema.optional()), data: z.union([HabitRecordCreateInputObjectSchema, HabitRecordUncheckedCreateInputObjectSchema])
    }).strict(), createMany: z.object({
        data: z.union([HabitRecordCreateManyInputObjectSchema, z.array(HabitRecordCreateManyInputObjectSchema)]), skipDuplicates: z.boolean().optional()
    }).strict(), 'delete': z.object({
        select: z.lazy(() => HabitRecordSelectObjectSchema.optional()), include: z.lazy(() => HabitRecordIncludeObjectSchema.optional()), where: HabitRecordWhereUniqueInputObjectSchema
    }).strict(), deleteMany: z.object({
        where: HabitRecordWhereInputObjectSchema.optional()
    }).strict(), update: z.object({
        select: z.lazy(() => HabitRecordSelectObjectSchema.optional()), include: z.lazy(() => HabitRecordIncludeObjectSchema.optional()), data: z.union([HabitRecordUpdateInputObjectSchema, HabitRecordUncheckedUpdateInputObjectSchema]), where: HabitRecordWhereUniqueInputObjectSchema
    }).strict(), updateMany: z.object({
        data: z.union([HabitRecordUpdateManyMutationInputObjectSchema, HabitRecordUncheckedUpdateManyInputObjectSchema]), where: HabitRecordWhereInputObjectSchema.optional()
    }).strict(), upsert: z.object({
        select: z.lazy(() => HabitRecordSelectObjectSchema.optional()), include: z.lazy(() => HabitRecordIncludeObjectSchema.optional()), where: HabitRecordWhereUniqueInputObjectSchema, create: z.union([HabitRecordCreateInputObjectSchema, HabitRecordUncheckedCreateInputObjectSchema]), update: z.union([HabitRecordUpdateInputObjectSchema, HabitRecordUncheckedUpdateInputObjectSchema])
    }).strict(), aggregate: z.object({
        where: HabitRecordWhereInputObjectSchema.optional(), orderBy: z.union([HabitRecordOrderByWithRelationInputObjectSchema, HabitRecordOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HabitRecordWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([z.literal(true), HabitRecordCountAggregateInputObjectSchema]).optional(), _min: HabitRecordMinAggregateInputObjectSchema.optional(), _max: HabitRecordMaxAggregateInputObjectSchema.optional(), _avg: HabitRecordAvgAggregateInputObjectSchema.optional(), _sum: HabitRecordSumAggregateInputObjectSchema.optional()
    }).strict(), groupBy: z.object({
        where: HabitRecordWhereInputObjectSchema.optional(), orderBy: z.union([HabitRecordOrderByWithAggregationInputObjectSchema, HabitRecordOrderByWithAggregationInputObjectSchema.array()]).optional(), having: HabitRecordScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(HabitRecordScalarFieldEnumSchema), _count: z.union([z.literal(true), HabitRecordCountAggregateInputObjectSchema]).optional(), _min: HabitRecordMinAggregateInputObjectSchema.optional(), _max: HabitRecordMaxAggregateInputObjectSchema.optional(), _avg: HabitRecordAvgAggregateInputObjectSchema.optional(), _sum: HabitRecordSumAggregateInputObjectSchema.optional()
    }).strict(), count: z.object({
        where: HabitRecordWhereInputObjectSchema.optional(), orderBy: z.union([HabitRecordOrderByWithRelationInputObjectSchema, HabitRecordOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: HabitRecordWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), distinct: z.array(HabitRecordScalarFieldEnumSchema).optional(), select: z.union([z.literal(true), HabitRecordCountAggregateInputObjectSchema]).optional()
    }).strict(),
} as HabitRecordInputSchemaType;
